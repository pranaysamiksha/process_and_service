#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace process_webservice
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EMP_monitoring")]
	public partial class _serviceDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbrowser_history(browser_history instance);
    partial void Updatebrowser_history(browser_history instance);
    partial void Deletebrowser_history(browser_history instance);
    partial void Insertscreen_capture(screen_capture instance);
    partial void Updatescreen_capture(screen_capture instance);
    partial void Deletescreen_capture(screen_capture instance);
    partial void Insertuser_master(user_master instance);
    partial void Updateuser_master(user_master instance);
    partial void Deleteuser_master(user_master instance);
    partial void Insertadmin_login(admin_login instance);
    partial void Updateadmin_login(admin_login instance);
    partial void Deleteadmin_login(admin_login instance);
    partial void Insertprocess_master(process_master instance);
    partial void Updateprocess_master(process_master instance);
    partial void Deleteprocess_master(process_master instance);
    partial void Inserterrorlog(errorlog instance);
    partial void Updateerrorlog(errorlog instance);
    partial void Deleteerrorlog(errorlog instance);
    #endregion
		
		public _serviceDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public _serviceDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public _serviceDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public _serviceDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<browser_history> browser_histories
		{
			get
			{
				return this.GetTable<browser_history>();
			}
		}
		
		public System.Data.Linq.Table<screen_capture> screen_captures
		{
			get
			{
				return this.GetTable<screen_capture>();
			}
		}
		
		public System.Data.Linq.Table<user_master> user_masters
		{
			get
			{
				return this.GetTable<user_master>();
			}
		}
		
		public System.Data.Linq.Table<admin_login> admin_logins
		{
			get
			{
				return this.GetTable<admin_login>();
			}
		}
		
		public System.Data.Linq.Table<process_master> process_masters
		{
			get
			{
				return this.GetTable<process_master>();
			}
		}
		
		public System.Data.Linq.Table<errorlog> errorlogs
		{
			get
			{
				return this.GetTable<errorlog>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.browser_history")]
	public partial class browser_history : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _browser_historyID;
		
		private System.Nullable<int> _user_masterID;
		
		private string _browser_name;
		
		private string _url;
		
		private string _title;
		
		private string _last_visit_time;
		
		private System.Nullable<System.DateTime> _entrydate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbrowser_historyIDChanging(int value);
    partial void Onbrowser_historyIDChanged();
    partial void Onuser_masterIDChanging(System.Nullable<int> value);
    partial void Onuser_masterIDChanged();
    partial void Onbrowser_nameChanging(string value);
    partial void Onbrowser_nameChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void Onlast_visit_timeChanging(string value);
    partial void Onlast_visit_timeChanged();
    partial void OnentrydateChanging(System.Nullable<System.DateTime> value);
    partial void OnentrydateChanged();
    #endregion
		
		public browser_history()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_browser_historyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int browser_historyID
		{
			get
			{
				return this._browser_historyID;
			}
			set
			{
				if ((this._browser_historyID != value))
				{
					this.Onbrowser_historyIDChanging(value);
					this.SendPropertyChanging();
					this._browser_historyID = value;
					this.SendPropertyChanged("browser_historyID");
					this.Onbrowser_historyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_masterID", DbType="Int")]
		public System.Nullable<int> user_masterID
		{
			get
			{
				return this._user_masterID;
			}
			set
			{
				if ((this._user_masterID != value))
				{
					this.Onuser_masterIDChanging(value);
					this.SendPropertyChanging();
					this._user_masterID = value;
					this.SendPropertyChanged("user_masterID");
					this.Onuser_masterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_browser_name", DbType="VarChar(100)")]
		public string browser_name
		{
			get
			{
				return this._browser_name;
			}
			set
			{
				if ((this._browser_name != value))
				{
					this.Onbrowser_nameChanging(value);
					this.SendPropertyChanging();
					this._browser_name = value;
					this.SendPropertyChanged("browser_name");
					this.Onbrowser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(MAX)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(MAX)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_visit_time", DbType="VarChar(100)")]
		public string last_visit_time
		{
			get
			{
				return this._last_visit_time;
			}
			set
			{
				if ((this._last_visit_time != value))
				{
					this.Onlast_visit_timeChanging(value);
					this.SendPropertyChanging();
					this._last_visit_time = value;
					this.SendPropertyChanged("last_visit_time");
					this.Onlast_visit_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entrydate", DbType="DateTime")]
		public System.Nullable<System.DateTime> entrydate
		{
			get
			{
				return this._entrydate;
			}
			set
			{
				if ((this._entrydate != value))
				{
					this.OnentrydateChanging(value);
					this.SendPropertyChanging();
					this._entrydate = value;
					this.SendPropertyChanged("entrydate");
					this.OnentrydateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.screen_capture")]
	public partial class screen_capture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _screen_captureID;
		
		private System.Nullable<int> _user_masterID;
		
		private string _image_patch;
		
		private System.Nullable<System.DateTime> _entrydate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onscreen_captureIDChanging(int value);
    partial void Onscreen_captureIDChanged();
    partial void Onuser_masterIDChanging(System.Nullable<int> value);
    partial void Onuser_masterIDChanged();
    partial void Onimage_patchChanging(string value);
    partial void Onimage_patchChanged();
    partial void OnentrydateChanging(System.Nullable<System.DateTime> value);
    partial void OnentrydateChanged();
    #endregion
		
		public screen_capture()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_screen_captureID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int screen_captureID
		{
			get
			{
				return this._screen_captureID;
			}
			set
			{
				if ((this._screen_captureID != value))
				{
					this.Onscreen_captureIDChanging(value);
					this.SendPropertyChanging();
					this._screen_captureID = value;
					this.SendPropertyChanged("screen_captureID");
					this.Onscreen_captureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_masterID", DbType="Int")]
		public System.Nullable<int> user_masterID
		{
			get
			{
				return this._user_masterID;
			}
			set
			{
				if ((this._user_masterID != value))
				{
					this.Onuser_masterIDChanging(value);
					this.SendPropertyChanging();
					this._user_masterID = value;
					this.SendPropertyChanged("user_masterID");
					this.Onuser_masterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image_patch", DbType="VarChar(500)")]
		public string image_patch
		{
			get
			{
				return this._image_patch;
			}
			set
			{
				if ((this._image_patch != value))
				{
					this.Onimage_patchChanging(value);
					this.SendPropertyChanging();
					this._image_patch = value;
					this.SendPropertyChanged("image_patch");
					this.Onimage_patchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entrydate", DbType="DateTime")]
		public System.Nullable<System.DateTime> entrydate
		{
			get
			{
				return this._entrydate;
			}
			set
			{
				if ((this._entrydate != value))
				{
					this.OnentrydateChanging(value);
					this.SendPropertyChanging();
					this._entrydate = value;
					this.SendPropertyChanged("entrydate");
					this.OnentrydateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_master")]
	public partial class user_master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_masterID;
		
		private string _name;
		
		private string _email;
		
		private string _password;
		
		private System.Nullable<System.DateTime> _entrydate;
		
		private System.Nullable<int> _limit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_masterIDChanging(int value);
    partial void Onuser_masterIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnentrydateChanging(System.Nullable<System.DateTime> value);
    partial void OnentrydateChanged();
    partial void OnlimitChanging(System.Nullable<int> value);
    partial void OnlimitChanged();
    #endregion
		
		public user_master()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_masterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_masterID
		{
			get
			{
				return this._user_masterID;
			}
			set
			{
				if ((this._user_masterID != value))
				{
					this.Onuser_masterIDChanging(value);
					this.SendPropertyChanging();
					this._user_masterID = value;
					this.SendPropertyChanged("user_masterID");
					this.Onuser_masterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entrydate", DbType="DateTime")]
		public System.Nullable<System.DateTime> entrydate
		{
			get
			{
				return this._entrydate;
			}
			set
			{
				if ((this._entrydate != value))
				{
					this.OnentrydateChanging(value);
					this.SendPropertyChanging();
					this._entrydate = value;
					this.SendPropertyChanged("entrydate");
					this.OnentrydateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_limit", DbType="Int")]
		public System.Nullable<int> limit
		{
			get
			{
				return this._limit;
			}
			set
			{
				if ((this._limit != value))
				{
					this.OnlimitChanging(value);
					this.SendPropertyChanging();
					this._limit = value;
					this.SendPropertyChanged("limit");
					this.OnlimitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.admin_login")]
	public partial class admin_login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _admin_login_id;
		
		private string _username;
		
		private string _password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onadmin_login_idChanging(int value);
    partial void Onadmin_login_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public admin_login()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_login_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int admin_login_id
		{
			get
			{
				return this._admin_login_id;
			}
			set
			{
				if ((this._admin_login_id != value))
				{
					this.Onadmin_login_idChanging(value);
					this.SendPropertyChanging();
					this._admin_login_id = value;
					this.SendPropertyChanged("admin_login_id");
					this.Onadmin_login_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(100)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(100)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.process_master")]
	public partial class process_master : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _process_masterID;
		
		private System.Nullable<int> _user_masterID;
		
		private string _processid;
		
		private string _processName;
		
		private string _procStartTime;
		
		private string _appname;
		
		private string _totalProcessorTime;
		
		private string _userProcessorTime;
		
		private string _StartInfo;
		
		private System.Nullable<System.DateTime> _entrydate;
		
		private System.Nullable<decimal> _countr;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprocess_masterIDChanging(int value);
    partial void Onprocess_masterIDChanged();
    partial void Onuser_masterIDChanging(System.Nullable<int> value);
    partial void Onuser_masterIDChanged();
    partial void OnprocessidChanging(string value);
    partial void OnprocessidChanged();
    partial void OnprocessNameChanging(string value);
    partial void OnprocessNameChanged();
    partial void OnprocStartTimeChanging(string value);
    partial void OnprocStartTimeChanged();
    partial void OnappnameChanging(string value);
    partial void OnappnameChanged();
    partial void OntotalProcessorTimeChanging(string value);
    partial void OntotalProcessorTimeChanged();
    partial void OnuserProcessorTimeChanging(string value);
    partial void OnuserProcessorTimeChanged();
    partial void OnStartInfoChanging(string value);
    partial void OnStartInfoChanged();
    partial void OnentrydateChanging(System.Nullable<System.DateTime> value);
    partial void OnentrydateChanged();
    partial void OncountrChanging(System.Nullable<decimal> value);
    partial void OncountrChanged();
    #endregion
		
		public process_master()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_process_masterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int process_masterID
		{
			get
			{
				return this._process_masterID;
			}
			set
			{
				if ((this._process_masterID != value))
				{
					this.Onprocess_masterIDChanging(value);
					this.SendPropertyChanging();
					this._process_masterID = value;
					this.SendPropertyChanged("process_masterID");
					this.Onprocess_masterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_masterID", DbType="Int")]
		public System.Nullable<int> user_masterID
		{
			get
			{
				return this._user_masterID;
			}
			set
			{
				if ((this._user_masterID != value))
				{
					this.Onuser_masterIDChanging(value);
					this.SendPropertyChanging();
					this._user_masterID = value;
					this.SendPropertyChanged("user_masterID");
					this.Onuser_masterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_processid", DbType="VarChar(100)")]
		public string processid
		{
			get
			{
				return this._processid;
			}
			set
			{
				if ((this._processid != value))
				{
					this.OnprocessidChanging(value);
					this.SendPropertyChanging();
					this._processid = value;
					this.SendPropertyChanged("processid");
					this.OnprocessidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_processName", DbType="VarChar(100)")]
		public string processName
		{
			get
			{
				return this._processName;
			}
			set
			{
				if ((this._processName != value))
				{
					this.OnprocessNameChanging(value);
					this.SendPropertyChanging();
					this._processName = value;
					this.SendPropertyChanged("processName");
					this.OnprocessNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_procStartTime", DbType="VarChar(100)")]
		public string procStartTime
		{
			get
			{
				return this._procStartTime;
			}
			set
			{
				if ((this._procStartTime != value))
				{
					this.OnprocStartTimeChanging(value);
					this.SendPropertyChanging();
					this._procStartTime = value;
					this.SendPropertyChanged("procStartTime");
					this.OnprocStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appname", DbType="VarChar(200)")]
		public string appname
		{
			get
			{
				return this._appname;
			}
			set
			{
				if ((this._appname != value))
				{
					this.OnappnameChanging(value);
					this.SendPropertyChanging();
					this._appname = value;
					this.SendPropertyChanged("appname");
					this.OnappnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalProcessorTime", DbType="VarChar(100)")]
		public string totalProcessorTime
		{
			get
			{
				return this._totalProcessorTime;
			}
			set
			{
				if ((this._totalProcessorTime != value))
				{
					this.OntotalProcessorTimeChanging(value);
					this.SendPropertyChanging();
					this._totalProcessorTime = value;
					this.SendPropertyChanged("totalProcessorTime");
					this.OntotalProcessorTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userProcessorTime", DbType="VarChar(100)")]
		public string userProcessorTime
		{
			get
			{
				return this._userProcessorTime;
			}
			set
			{
				if ((this._userProcessorTime != value))
				{
					this.OnuserProcessorTimeChanging(value);
					this.SendPropertyChanging();
					this._userProcessorTime = value;
					this.SendPropertyChanged("userProcessorTime");
					this.OnuserProcessorTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartInfo", DbType="VarChar(MAX)")]
		public string StartInfo
		{
			get
			{
				return this._StartInfo;
			}
			set
			{
				if ((this._StartInfo != value))
				{
					this.OnStartInfoChanging(value);
					this.SendPropertyChanging();
					this._StartInfo = value;
					this.SendPropertyChanged("StartInfo");
					this.OnStartInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entrydate", DbType="DateTime")]
		public System.Nullable<System.DateTime> entrydate
		{
			get
			{
				return this._entrydate;
			}
			set
			{
				if ((this._entrydate != value))
				{
					this.OnentrydateChanging(value);
					this.SendPropertyChanging();
					this._entrydate = value;
					this.SendPropertyChanged("entrydate");
					this.OnentrydateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countr", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> countr
		{
			get
			{
				return this._countr;
			}
			set
			{
				if ((this._countr != value))
				{
					this.OncountrChanging(value);
					this.SendPropertyChanging();
					this._countr = value;
					this.SendPropertyChanged("countr");
					this.OncountrChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.errorlog")]
	public partial class errorlog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _errorlogID;
		
		private string _mothod;
		
		private string _errortrace;
		
		private string _entrydate;
		
		private System.Nullable<int> _user_masterID;
		
		private string _error_stack;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnerrorlogIDChanging(int value);
    partial void OnerrorlogIDChanged();
    partial void OnmothodChanging(string value);
    partial void OnmothodChanged();
    partial void OnerrortraceChanging(string value);
    partial void OnerrortraceChanged();
    partial void OnentrydateChanging(string value);
    partial void OnentrydateChanged();
    partial void Onuser_masterIDChanging(System.Nullable<int> value);
    partial void Onuser_masterIDChanged();
    partial void Onerror_stackChanging(string value);
    partial void Onerror_stackChanged();
    #endregion
		
		public errorlog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_errorlogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int errorlogID
		{
			get
			{
				return this._errorlogID;
			}
			set
			{
				if ((this._errorlogID != value))
				{
					this.OnerrorlogIDChanging(value);
					this.SendPropertyChanging();
					this._errorlogID = value;
					this.SendPropertyChanged("errorlogID");
					this.OnerrorlogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mothod", DbType="VarChar(100)")]
		public string mothod
		{
			get
			{
				return this._mothod;
			}
			set
			{
				if ((this._mothod != value))
				{
					this.OnmothodChanging(value);
					this.SendPropertyChanging();
					this._mothod = value;
					this.SendPropertyChanged("mothod");
					this.OnmothodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_errortrace", DbType="VarChar(MAX)")]
		public string errortrace
		{
			get
			{
				return this._errortrace;
			}
			set
			{
				if ((this._errortrace != value))
				{
					this.OnerrortraceChanging(value);
					this.SendPropertyChanging();
					this._errortrace = value;
					this.SendPropertyChanged("errortrace");
					this.OnerrortraceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entrydate", DbType="VarChar(200)")]
		public string entrydate
		{
			get
			{
				return this._entrydate;
			}
			set
			{
				if ((this._entrydate != value))
				{
					this.OnentrydateChanging(value);
					this.SendPropertyChanging();
					this._entrydate = value;
					this.SendPropertyChanged("entrydate");
					this.OnentrydateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_masterID", DbType="Int")]
		public System.Nullable<int> user_masterID
		{
			get
			{
				return this._user_masterID;
			}
			set
			{
				if ((this._user_masterID != value))
				{
					this.Onuser_masterIDChanging(value);
					this.SendPropertyChanging();
					this._user_masterID = value;
					this.SendPropertyChanged("user_masterID");
					this.Onuser_masterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_error_stack", DbType="VarChar(MAX)")]
		public string error_stack
		{
			get
			{
				return this._error_stack;
			}
			set
			{
				if ((this._error_stack != value))
				{
					this.Onerror_stackChanging(value);
					this.SendPropertyChanging();
					this._error_stack = value;
					this.SendPropertyChanged("error_stack");
					this.Onerror_stackChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
